local Library = {Active = false}

local Colors = {
    ['Black']   ='@@BLACK@@';
    ['Blue']	='@@BLUE@@';
    ['Green']	='@@GREEN@@';
    ['Cyan']	='@@CYAN@@';
    ['Red']	='@@RED@@';
    ['Magenta']	='@@MAGENTA@@';
    ['Brown']	='@@BROWN@@';
    ['Light Gray']	='@@LIGHT_GRAY@@';
    ['Dark Gray']	='@@DARK_GRAY@@';
    ['Light Blue']	='@@LIGHT_BLUE@@';
    ['Light Green']	='@@LIGHT_GREEN@@';
    ['Light Cyan']	='@@LIGHT_CYAN@@';
    ['Light Red']	='@@LIGHT_RED@@';
    ['Light Magenta']	='@@LIGHT_MAGENTA@@';
    ['Yellow']	='@@YELLOW@@';
    ['White']	='@@WHITE@@';
}

Library.Active = true

local commands = {}
local CommandMode = false

local function handlerequest(request)
    if CommandMode ~= true then return end
    request = request:lower():split(" ")
    for i,v in pairs(commands) do
        if table.find(i, request[1]) then
            pcall(function() 
                v((function()
                    local t = {}
                    for ii,__ in pairs(request) do
                        if ii ~= 1 then table.insert(t, 1, request[ii]) end
                    end
                    return t;
                end)()) 
            end)
            write("\n")
            break;
        end
    end
    rconsoleprint("@@WHITE@@")
    local input = rconsoleinput()
    handlerequest(input)
end

function Library:AddCommand(aliases, func)
    assert(type(aliases) == "table", "Invalid arg 1 supplied")
    assert(type(func) == "function", "Invalid arg 2 supplied")
    commands[aliases] = func
end

function Library:ClearConsole()
    rconsoleclear()
end

function Library:LoadColors()
    return Colors 
end

function Library:Jump(Lines, OptionalText)
    for i = 1,Lines do 
        rconsoleprint("\n")
    end
    if OptionalText == nil then return end
    rconsoleprint(OptionalText)
end

function Library:Info(style, color, text)
    if style == "custom1" then
        rconsoleprint(color)
        rconsoleprint("[INFO]:".." "..text)
    elseif style == nil or style == "default" then
        rconsoleprint(color)
        rconsoleinfo(text)
    end
end

function Library:ConsoleRename(title)
    rconsolename(title)
end

function Library:Error(style, color, text)
    if style == "custom1" then
        rconsoleprint(color)
        rconsoleprint("[ERROR]:".." "..text)
    elseif style == nil or style == "default" then
        rconsoleprint(color)
        rconsoleerr(text)
    end
end

return Library;

rconsoleprint("@@RED@@")
rconsoleprint("Input Start\n")
handlerequest("")
